# -*- coding: utf-8 -*-
"""
File to generate a shapefile from the trace files generated by LH_Driver.cpp

User needs to set input path to the folder where all the trace files are stored and
an output path where the shapefile will be written.

DO NOT USE THE SAME PATH, this will cause IO problems due to the number of 
trace files generated

Created on Thu Dec 04 12:13:36 2014

Copyright (C) 2015 Stuart W.D Grieve 2015

Developer can be contacted by s.grieve _at_ ed.ac.uk

This program is free software;
you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation;
either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY;
without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the
GNU General Public License along with this program;
if not, write to:
Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor,
Boston, MA 02110-1301
USA

@author: SWDG
"""

import shapefile as shp
import os
import platform

#test for environment
if platform.system() is 'Windows':        
    path = 'X:\\CR_Traces\\'
    outpath = 'X:\\trace_shapefiles\\'
else: #assume unix    
    path = '/home/s0675405/DataStore/CR_Traces/'
    outpath = '/home/s0675405/DataStore/trace_shapefiles/'


filenames = []

for t in os.listdir(path):
    if t.endswith('.txt'):
        filenames.append(t)

files = []
for f in filenames:
    #if int(f.split('_')[0]) > 110 and int(f.split('_')[0]) < 1380:  # this is a clumsy spatial filter, build a list of files however you want
            #if int(f.split('_')[1]) > 125 and int(f.split('_')[1]) < 935:
    files.append(f)

files = files[::100] # only processing every 100th trace for speed

print 'Number of files to process is:',len(files)

w = shp.Writer(shp.POLYLINE)
w.field('Start_IJ','C','40') 
w.field('divergence','N',10,5)
w.field('Planar','N',10,5)
w.field('lh','F',10,5)
w.field('E_Star','F',10,5)
w.field('R_Star','F',10,5)
w.field('EucDist','F',10,5)

count = 1

for filename in files:
    print count, len(files)
    
    count = count + 1    
    
    with open(path+filename, 'r') as f:
        data = f.readlines()
    
    x = []
    y = []
    flag = 0        
    lh = 0
    planar_count = 0
    ratio = 0.0
    ed = 0.0
    
    for d in data:
        x.append(float(d.split()[0]))
        y.append(float(d.split()[1]))
        divergent_count = int(d.split()[2])
        lh = float(d.split()[3])
        planar_count = int(d.split()[4])
        estar = float(d.split()[5])
        rstar = float(d.split()[6])
        ed = float(d.split()[7])
    
    coords = zip(x,y)
    
    w.poly(parts=([coords[1:]]),shapeType=shp.POLYLINE)
    w.record(filename,divergent_count,planar_count,lh,estar,rstar,ed)

w.save(outpath+'Trace_Shapefile.shp') 

